name: Code Quality Checks

on:
  push:
  pull_request:
    branches:
      - master

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '18'

    - name: Run building the app
      run: mvn -B clean package -DskipTests

    - name: Run Checkstyle with Google Checks
      if: always()
      run: mvn checkstyle:check@google-checks -DskipTests
      
    - name: Run Checkstyle with Custom Rules
      if: always()
      run: mvn checkstyle:check@custom-checks -DskipTests

    - name: Run PMD CPD Check
      if: always()
      run: mvn pmd:cpd-check -DskipTests

    - name: Run PMD Scan
      if: always()
      run: mvn pmd:check -DskipTests

    - name: Archive Checkstyle and PMD Reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: code-quality-reports
        path: |
          target/checkstyle-result.xml
          target/pmd.xml
          target/cpd.xml

    - name: Report checkstyle and pmd analysis results
      uses: gmazzo/publish-report-annotations@v1
      if: always()
      with:
          checkName: "Checkstyle And Pmd Analysis Reports (omitting passed)"
          reports: |
            target/checkstyle-result.xml
            target/pmd.xml
            target/cpd.xml
          testsSummary: full
          filterPassedTests: true
          detectFlakyTests: true

    - name: Publish Analysis Results
      if: always()
      uses: garyttierney/analysis-publisher@master
      args: >
        --report-type=checkstyle --path=target/checkstyle-result.xml
        --report-type=pmd --path=target/pmd.xml
        --report-type=cpd --path=target/cpd.xml
        --publisher=github_check

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 18
        uses: actions/setup-java@v1
        with:
          java-version: 18

      - name: Install dependencies
        run: mvn install -DskipTests=true -Dmaven.javadoc.skip=true -B -V

      - name: Run tests and collect coverage
        run: mvn -B test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
      - name: Report unit tests results
        uses: gmazzo/publish-report-annotations@v1
        if: always()
        with:
            checkName: "Unit tests Reports (omitting passed)"
            reports: |
              target/surefire-reports/TEST-*.xml
            testsSummary: full
            filterPassedTests: true
            detectFlakyTests: true

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    #needs: code-quality
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x' # Use the latest Node.js version for release
      - name: Install dependencies
        run: npm install semantic-release
      - name: Modify package.json io add version and package name
        run: jq '.name = "java-analysis" | .version = "1.0.0"' package.json > tmp.json && mv tmp.json package.json
      - name: Create .releaserc file
        run: |
          echo '{
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/github"
            ]
          }' > .releaserc
      - name: Verify integrity
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --branches main
